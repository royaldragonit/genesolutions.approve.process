@model eDoc_Core.Models.Entities.EmailTemplate

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Chỉnh sửa mẫu Email</h2>

@using (Html.BeginForm("Edit", "EmailTemplate", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "fChangeValueDescription()" }))
{

    <div class="form-horizontal">
        <h4>Mẫu Email</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmailTemplateId)
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(m => m.Content, new { @class = "summernote" })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateOn, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.CreateOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu thay đổi" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Quay lại", "Index", null, new { @class = "btn btn-primary" })
</div>

@section Scripts{
    <!-- Summernote -->
    <script src="/Content/AdminLTE/plugins/summernote/summernote-bs4.min.js"></script>
    <!-- CodeMirror -->
    <script src="/Content/AdminLTE/plugins/codemirror/codemirror.js"></script>
    <script src="/Content/AdminLTE/plugins/codemirror/mode/css/css.js"></script>
    <script src="/Content/AdminLTE/plugins/codemirror/mode/xml/xml.js"></script>
    <script src="/Content/AdminLTE/plugins/codemirror/mode/htmlmixed/htmlmixed.js"></script>
    <script>
        function fChangeValueDescription() {
            var html = $('.summernote').summernote('code');
            log(html);
            document.formCreateDocument.description.value = html;
            return true;
        }
        $(function () {
            // Summernote
            $('.summernote').summernote()

            // CodeMirror
            //CodeMirror.fromTextArea(document.getElementById("codeMirrorDemo"), {
            //    mode: "htmlmixed",
            //    theme: "monokai"
            //});
        })
        $(document).ready(function () {
            //$.ajax({
            //    url: "/Document/CreateDocument",
            //    type: "POST",
            //    timeout: 0,
            //    contentType: 'application/json',
            //    data: JSON.stringify({
            //        name: "aa",
            //        description: "bbbbbbb"
            //    }),
            //    success: function (result) {
            //        if (result.success) {
            //            alert("Tạo quy trình chấp thuận thành công");
            //            location.href = "/Contract/ListContracts";
            //        }
            //    },
            //    error: function (err) {
            //        console.log("Lỗi", err);
            //    }
            //});
        })
    </script>
}